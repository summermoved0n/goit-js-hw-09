{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXUQ,SAASC,cAAc,SAe/BC,iBAAiB,UAAU,SAAAC,GAClCA,EAAEC,iBAMF,IAJA,IAAMC,EAAQC,OAAOH,EAAEI,OAAOC,SAAShB,MAAMiB,OACvCC,EAAOJ,OAAOH,EAAEI,OAAOC,SAASE,KAAKD,OACrCE,EAASL,OAAOH,EAAEI,OAAOC,SAASG,OAAOF,OAEtCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAInCtB,EAHiBsB,EACIP,GAASO,EAAI,GAAKF,GAGpCG,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,qBAAoCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG7C2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,oBAAmCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formData = document.querySelector('.form')\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformData.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const delay = Number(e.target.elements.delay.value);\n  const step = Number(e.target.elements.step.value);\n  const amount = Number(e.target.elements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.53edda20.js.map"}